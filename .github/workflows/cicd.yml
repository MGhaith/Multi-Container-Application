name: CI/CD Workflow

on:
  push:
    branches: [ main ]
    paths-ignore:
          - 'README.md'
          - '.gitignore'
          - '.gitattributes'

permissions:
  id-token: write
  contents: read

jobs:
  build-infra:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS credentials via OIDC (Terraform)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.TERRAFORM_ROLE_ARN }}
          aws-region: us-east-1

      - name: Deploy EC2 Instance
        working-directory: ./terraform
        env:
          TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
        run: |
          terraform init
          terraform plan -out=tfplan
          terraform apply -auto-approve tfplan

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: [build-infra]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t mghaith/multi-container-app ../../node_api

      - name: Push to Docker Hub
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USER }}" --password-stdin
          docker push mghaith/multi-container-app

      - name: Deploy with Ansible
        uses: dawidd6/action-ansible-playbook@v4
        with:
          playbook: ansible/playbook.yml
          inventory: ansible/inventory
          directory: ./ansible
          key: ${{ secrets.SSH_PRIVATE_KEY }}

  cleanup:
    runs-on: ubuntu-latest
    needs: [build-infra, build-and-deploy]
    if: failure()  # only runs if any of jobs fail
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS credentials via OIDC (Terraform)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.TERRAFORM_ROLE_ARN }}
          aws-region: us-east-1

      - name: Destroy resources
        working-directory: ./terraform
        env:
          TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
        run: |
          terraform init
          terraform destroy -auto-approve